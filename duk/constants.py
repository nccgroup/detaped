class DukConstants:
    DUK_OP = {
        0: 'LDREG', 1: 'STREG',
        2: 'JUMP',
        3: 'LDCONST', 4: 'LDINT', 5: 'LDINTX',
        6: 'LDTHIS', 7: 'LDUNDEF', 8: 'LDNULL',
        9: 'LDTRUE', 10: 'LDFALSE',
        11: 'GETVAR',
        12: 'BNOT', 13: 'LNOT',
        14: 'UNM', 15: 'UNP',
        16: 'EQ', 16: 'EQ_RR', 17: 'EQ_CR', 18: 'EQ_RC', 19: 'EQ_CC',
        20: 'NEQ', 20: 'NEQ_RR', 21: 'NEQ_CR', 22: 'NEQ_RC', 23: 'NEQ_CC',
        24: 'SEQ', 24: 'SEQ_RR', 25: 'SEQ_CR', 26: 'SEQ_RC', 27: 'SEQ_CC',
        28: 'SNEQ', 28: 'SNEQ_RR', 29: 'SNEQ_CR', 30: 'SNEQ_RC', 31: 'SNEQ_CC',
        32: 'GT', 32: 'GT_RR', 33: 'GT_CR', 34: 'GT_RC', 35: 'GT_CC',
        36: 'GE', 36: 'GE_RR', 37: 'GE_CR', 38: 'GE_RC', 39: 'GE_CC',
        40: 'LT', 40: 'LT_RR', 41: 'LT_CR', 42: 'LT_RC', 43: 'LT_CC',
        44: 'LE', 44: 'LE_RR', 45: 'LE_CR', 46: 'LE_RC', 47: 'LE_CC',
        48: 'IFTRUE', 48: 'IFTRUE_R', 49: 'IFTRUE_C', 50: 'IFFALSE', 50: 'IFFALSE_R', 51: 'IFFALSE_C',
        52: 'ADD', 52: 'ADD_RR', 53: 'ADD_CR', 54: 'ADD_RC', 55: 'ADD_CC',
        56: 'SUB', 56: 'SUB_RR', 57: 'SUB_CR', 58: 'SUB_RC', 59: 'SUB_CC',
        60: 'MUL', 60: 'MUL_RR', 61: 'MUL_CR', 62: 'MUL_RC', 63: 'MUL_CC',
        64: 'DIV', 64: 'DIV_RR', 65: 'DIV_CR', 66: 'DIV_RC', 67: 'DIV_CC',
        68: 'MOD', 68: 'MOD_RR', 69: 'MOD_CR', 70: 'MOD_RC', 71: 'MOD_CC',
        72: 'EXP', 72: 'EXP_RR', 73: 'EXP_CR', 74: 'EXP_RC', 75: 'EXP_CC',
        76: 'BAND', 76: 'BAND_RR', 77: 'BAND_CR', 78: 'BAND_RC', 79: 'BAND_CC',
        80: 'BOR', 80: 'BOR_RR', 81: 'BOR_CR', 82: 'BOR_RC', 83: 'BOR_CC',
        84: 'BXOR', 84: 'BXOR_RR', 85: 'BXOR_CR', 86: 'BXOR_RC', 87: 'BXOR_CC',
        88: 'BASL', 88: 'BASL_RR', 89: 'BASL_CR', 90: 'BASL_RC', 91: 'BASL_CC',
        92: 'BLSR', 92: 'BLSR_RR', 93: 'BLSR_CR', 94: 'BLSR_RC', 95: 'BLSR_CC',
        96: 'BASR', 96: 'BASR_RR', 97: 'BASR_CR', 98: 'BASR_RC', 99: 'BASR_CC',
        100: 'INSTOF', 100: 'INSTOF_RR', 101: 'INSTOF_CR', 102: 'INSTOF_RC', 103: 'INSTOF_CC',
        104: 'IN', 104: 'IN_RR', 105: 'IN_CR', 106: 'IN_RC', 107: 'IN_CC',
        108: 'GETPROP', 108: 'GETPROP_RR', 109: 'GETPROP_CR', 110: 'GETPROP_RC', 111: 'GETPROP_CC',
        112: 'PUTPROP', 112: 'PUTPROP_RR', 113: 'PUTPROP_CR', 114: 'PUTPROP_RC', 115: 'PUTPROP_CC',
        116: 'DELPROP', 116: 'DELPROP_RR', 117: 'DELPROP_CR_UNUSED', 118: 'DELPROP_RC', 119: 'DELPROP_CC_UNUSED',
        120: 'PREINCR', 121: 'PREDECR', 122: 'POSTINCR', 123: 'POSTDECR',
        124: 'PREINCV', 125: 'PREDECV', 126: 'POSTINCV', 127: 'POSTDECV',
        128: 'PREINCP', 128: 'PREINCP_RR', 129: 'PREINCP_CR', 130: 'PREINCP_RC', 131: 'PREINCP_CC',
        132: 'PREDECP', 132: 'PREDECP_RR', 133: 'PREDECP_CR', 134: 'PREDECP_RC', 135: 'PREDECP_CC',
        136: 'POSTINCP', 136: 'POSTINCP_RR', 137: 'POSTINCP_CR', 138: 'POSTINCP_RC', 139: 'POSTINCP_CC',
        140: 'POSTDECP', 140: 'POSTDECP_RR', 141: 'POSTDECP_CR', 142: 'POSTDECP_RC', 143: 'POSTDECP_CC',
        144: 'DECLVAR', 144: 'DECLVAR_RR', 145: 'DECLVAR_CR', 146: 'DECLVAR_RC', 147: 'DECLVAR_CC',
        148: 'REGEXP', 148: 'REGEXP_RR', 149: 'REGEXP_CR', 150: 'REGEXP_RC', 151: 'REGEXP_CC',
        152: 'CLOSURE',
        153: 'TYPEOF', 154: 'TYPEOFID',
        155: 'PUTVAR', 156: 'DELVAR',
        157: 'RETREG', 158: 'RETUNDEF', 159: 'RETCONST', 160: 'RETCONSTN',
        161: 'LABEL', 162: 'ENDLABEL',
        163: 'BREAK',
        164: 'CONTINUE',
        165: 'TRYCATCH', 166: 'ENDTRY', 167: 'ENDCATCH',
        168: 'ENDFIN',
        169: 'THROW',
        170: 'INVLHS',
        171: 'CSREG',
        172: 'CSVAR', 172: 'CSVAR_RR', 173: 'CSVAR_CR', 174: 'CSVAR_RC', 175: 'CSVAR_CC',
        176: 'CALL0', 177: 'CALL1', 178: 'CALL2', 179: 'CALL3', 180: 'CALL4', 181: 'CALL5', 182: 'CALL6',
        183: 'CALL7', 184: 'CALL8', 185: 'CALL9', 186: 'CALL10', 187: 'CALL11', 188: 'CALL12', 189: 'CALL13', 190: 'CALL14', 191: 'CALL15',
        192: 'NEWOBJ', 193: 'NEWARR', 194: 'MPUTOBJ',
        195: 'MPUTOBJI',
        196: 'INITSET', 197: 'INITGET',
        198: 'MPUTARR', 199: 'MPUTARRI',
        200: 'SETALEN',
        201: 'INITENUM', 202: 'NEXTENUM',
        203: 'NEWTARGET',
        204: 'DEBUGGER',
        205: 'NOP',
        206: 'INVALID',
        207: 'UNUSED207',
        208: 'GETPROPC', 208: 'GETPROPC_RR', 209: 'GETPROPC_CR', 210: 'GETPROPC_RC', 211: 'GETPROPC_CC',
        212: 'UNUSED212', 213: 'UNUSED213', 214: 'UNUSED214', 215: 'UNUSED215', 216: 'UNUSED216', 217: 'UNUSED217', 218: 'UNUSED218',
        219: 'UNUSED219', 220: 'UNUSED220', 221: 'UNUSED221', 222: 'UNUSED222', 223: 'UNUSED223', 224: 'UNUSED224', 225: 'UNUSED225',
        226: 'UNUSED226', 227: 'UNUSED227', 228: 'UNUSED228', 229: 'UNUSED229', 230: 'UNUSED230', 231: 'UNUSED231', 232: 'UNUSED232',
        233: 'UNUSED233', 234: 'UNUSED234', 235: 'UNUSED235', 236: 'UNUSED236', 237: 'UNUSED237', 238: 'UNUSED238', 239: 'UNUSED239',
        240: 'UNUSED240', 241: 'UNUSED241', 242: 'UNUSED242', 243: 'UNUSED243', 244: 'UNUSED244', 245: 'UNUSED245', 246: 'UNUSED246',
        247: 'UNUSED247', 248: 'UNUSED248', 249: 'UNUSED249', 250: 'UNUSED250', 251: 'UNUSED251', 252: 'UNUSED252', 253: 'UNUSED253',
        254: 'UNUSED254', 255: 'UNUSED255',
        256: 'NONE',
    }

    DUK_BC_REGCONST_B = 0x01
    DUK_BC_REGCONST_C = 0x02

    DUK__RCBIT_B = DUK_BC_REGCONST_B
    DUK__RCBIT_C = DUK_BC_REGCONST_C

    DUK__SER_STRING = 0
    DUK__SER_NUMBER = 1
    DUK__NO_FORMALS = 0xffffffff

    DUK_BC_TRYCATCH_FLAG_HAVE_CATCH    = 1 << 0
    DUK_BC_TRYCATCH_FLAG_HAVE_FINALLY  = 1 << 1
    DUK_BC_TRYCATCH_FLAG_CATCH_BINDING = 1 << 2
    DUK_BC_TRYCATCH_FLAG_WITH_BINDING  = 1 << 3

    DUK_BC_DECLVAR_FLAG_FUNC_DECL = 1 << 4

    DUK_BC_CALL_FLAG_TAILCALL       = 1 << 0
    DUK_BC_CALL_FLAG_CONSTRUCT      = 1 << 1
    DUK_BC_CALL_FLAG_CALLED_AS_EVAL = 1 << 2
    DUK_BC_CALL_FLAG_INDIRECT       = 1 << 3

    DUK_BC_LDINT_BIAS   = 1 << 15
    DUK_BC_LDINTX_SHIFT = 16
    DUK_BC_JUMP_BIAS    = 1 << 23

    DUK_PROPDESC_FLAG_WRITABLE     = 1 << 0
    DUK_PROPDESC_FLAG_ENUMERABLE   = 1 << 1
    DUK_PROPDESC_FLAG_CONFIGURABLE = 1 << 2
    DUK_PROPDESC_FLAG_ACCESSOR     = 1 << 3
    DUK_PROPDESC_FLAG_VIRTUAL      = 1 << 4
    DUK_PROPDESC_FLAGS_MASK = (DUK_PROPDESC_FLAG_WRITABLE | DUK_PROPDESC_FLAG_ENUMERABLE | DUK_PROPDESC_FLAG_CONFIGURABLE | DUK_PROPDESC_FLAG_ACCESSOR)

    DUK_PROPDESC_FLAG_NO_OVERWRITE = 1 << 4

    DUK_PROPDESC_FLAGS_NONE = 0
    DUK_PROPDESC_FLAGS_W    = (DUK_PROPDESC_FLAG_WRITABLE)
    DUK_PROPDESC_FLAGS_E    = (DUK_PROPDESC_FLAG_ENUMERABLE)
    DUK_PROPDESC_FLAGS_C    = (DUK_PROPDESC_FLAG_CONFIGURABLE)
    DUK_PROPDESC_FLAGS_WE   = (DUK_PROPDESC_FLAG_WRITABLE | DUK_PROPDESC_FLAG_ENUMERABLE)
    DUK_PROPDESC_FLAGS_WC   = (DUK_PROPDESC_FLAG_WRITABLE | DUK_PROPDESC_FLAG_CONFIGURABLE)
    DUK_PROPDESC_FLAGS_EC   = (DUK_PROPDESC_FLAG_ENUMERABLE | DUK_PROPDESC_FLAG_CONFIGURABLE)
    DUK_PROPDESC_FLAGS_WEC  = (DUK_PROPDESC_FLAG_WRITABLE | DUK_PROPDESC_FLAG_ENUMERABLE | DUK_PROPDESC_FLAG_CONFIGURABLE)

    DUK_GETDESC_FLAG_PUSH_VALUE       = 1 << 0
    DUK_GETDESC_FLAG_IGNORE_PROTOLOOP = 1 << 1

    DUK_CALL_FLAG_TAILCALL                 = 1 << 0
    DUK_CALL_FLAG_CONSTRUCT                = 1 << 1
    DUK_CALL_FLAG_CALLED_AS_EVAL           = 1 << 2
    DUK_CALL_FLAG_ALLOW_ECMATOECMA         = 1 << 3
    DUK_CALL_FLAG_DIRECT_EVAL              = 1 << 4
    DUK_CALL_FLAG_CONSTRUCT_PROXY          = 1 << 5
    DUK_CALL_FLAG_DEFAULT_INSTANCE_UPDATED = 1 << 6

    DUK_EQUALS_FLAG_SAMEVALUE = 1 << 0
    DUK_EQUALS_FLAG_STRICT    = 1 << 1

    DUK_COMPARE_FLAG_NEGATE          = 1 << 0
    DUK_COMPARE_FLAG_EVAL_LEFT_FIRST = 1 << 1

    DUK_CAT_TYPE_MASK   = 0x0000000f
    DUK_CAT_TYPE_BITS   = 4
    DUK_CAT_LABEL_MASK  = 0xffffff00
    DUK_CAT_LABEL_BITS  = 24
    DUK_CAT_LABEL_SHIFT = 8

    DUK_CAT_FLAG_CATCH_ENABLED         = 1 << 4
    DUK_CAT_FLAG_FINALLY_ENABLED       = 1 << 5
    DUK_CAT_FLAG_CATCH_BINDING_ENABLED = 1 << 6
    DUK_CAT_FLAG_LEXENV_ACTIVE         = 1 << 7

    DUK_CAT_TYPE_UNKNOWN = 0
    DUK_CAT_TYPE_TCF     = 1
    DUK_CAT_TYPE_LABEL   = 2